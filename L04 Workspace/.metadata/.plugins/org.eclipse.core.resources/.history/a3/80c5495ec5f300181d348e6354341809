
package services;

import javax.transaction.Transactional;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.util.Assert;

import utilities.AbstractTest;
import domain.Administrator;
import domain.Complaint;
import domain.Customer;
import domain.FixUp;
import domain.HandyWorker;
import domain.Note;
import domain.Referee;
import domain.Report;

@ContextConfiguration(locations = {
	"classpath:spring/datasource.xml", "classpath:spring/config/packages.xml"
})
@RunWith(SpringJUnit4ClassRunner.class)
@Transactional
public class NoteServiceTest extends AbstractTest {

	@Autowired
	private NoteService				noteService;

	@Autowired
	private RefereeService			refereeService;

	@Autowired
	private ComplaintService		complaintService;

	@Autowired
	private ReportService			reportService;

	@Autowired
	private CustomerService			customerService;

	@Autowired
	private FixUpService			fixUpService;

	@Autowired
	private AdministratorService	administratorService;

	@Autowired
	private HandyWorkerService		handyWorkerService;


	//36.4 (CARMEN) -->Write a note regarding any of the reports that he or shes written (as long as it was
	//saved in final mode).
	//	@Test
	//	public void testCreateNote() {
	//
	//		final Customer customer = this.customerService.create();
	//		customer.setName("Alvaro");
	//		customer.setSurname("alvaro");
	//		customer.getUserAccount().setUsername("dogran");
	//		customer.getUserAccount().setPassword("123456789");
	//		final Customer saveCustomer = this.customerService.save(customer);
	//		super.authenticate("dogran");
	//
	//		final FixUp fixUp = this.fixUpService.create();
	//		final FixUp saveFixUp = this.fixUpService.save(fixUp);
	//
	//		final Complaint c1 = this.complaintService.create();
	//		c1.setFixUp(saveFixUp);
	//		final Complaint saveComplaint1 = this.complaintService.save(c1);
	//		super.unauthenticate();
	//
	//		final Administrator administrator = this.administratorService.create();
	//		administrator.setName("Ana");
	//		administrator.setSurname("navarro");
	//		administrator.getUserAccount().setUsername("adminUser");
	//		administrator.getUserAccount().setPassword("12345678");
	//		final Administrator saveAdministrator = this.administratorService.save(administrator);
	//		Assert.isTrue(this.administratorService.findAll().contains(saveAdministrator));
	//		super.authenticate("adminUser");
	//		final Referee referee = this.refereeService.create();
	//		referee.setName("Alvaro");
	//		referee.setSurname("alvaro");
	//		referee.getUserAccount().setUsername("refereeUser");
	//		referee.getUserAccount().setPassword("12345678");
	//		final Referee saveReferee = this.refereeService.save(referee);
	//		super.authenticate("refereeUser");
	//
	//		final Boolean refereeBefore = saveComplaint1.getReferee() != null;
	//		this.complaintService.setReefereeToAComplaint(saveComplaint1);
	//		final Boolean refereeAfter = saveComplaint1.getReferee() != null;
	//		Assert.isTrue(refereeAfter != refereeBefore);
	//
	//		final Report re = this.reportService.create();
	//		re.setComplaint(saveComplaint1);
	//		final Report save = this.reportService.save(re);
	//
	//		final Note note = this.noteService.create();
	//		note.setReport(save);
	//		final Note noteS = this.noteService.save(note);
	//
	//		Assert.isTrue(this.noteService.findAll().contains(noteS));
	//	}
	//	//CARMEN
	//
	//	//36.5 (CARMEN) --> Write a comment in a note regarding any of the reports that he or shes written.
	//	@Test
	//	public void testUpdateRefereeComment() {
	//
	//		final Customer customer = this.customerService.create();
	//		customer.setName("Carmen");
	//		customer.setSurname("carmen");
	//		customer.getUserAccount().setUsername("carferben");
	//		customer.getUserAccount().setPassword("123456789");
	//		final Customer saveCustomer = this.customerService.save(customer);
	//		super.authenticate("carferben");
	//
	//		final FixUp fixUp = this.fixUpService.create();
	//		final FixUp saveFixUp = this.fixUpService.save(fixUp);
	//
	//		final Complaint c1 = this.complaintService.create();
	//		c1.setFixUp(saveFixUp);
	//		final Complaint saveComplaint1 = this.complaintService.save(c1);
	//		super.unauthenticate();
	//
	//		final Administrator administrator = this.administratorService.create();
	//		administrator.setName("Ana");
	//		administrator.setSurname("navarro");
	//		administrator.getUserAccount().setUsername("adminUser");
	//		administrator.getUserAccount().setPassword("12345678");
	//		final Administrator saveAdministrator = this.administratorService.save(administrator);
	//		Assert.isTrue(this.administratorService.findAll().contains(saveAdministrator));
	//		super.authenticate("adminUser");
	//		final Referee referee = this.refereeService.create();
	//		referee.setName("Alvaro");
	//		referee.setSurname("alvaro");
	//		referee.getUserAccount().setUsername("refereeUser");
	//		referee.getUserAccount().setPassword("12345678");
	//		final Referee saveReferee = this.refereeService.save(referee);
	//		super.authenticate("refereeUser");
	//
	//		final Boolean refereeBefore = saveComplaint1.getReferee() != null;
	//		this.complaintService.setReefereeToAComplaint(saveComplaint1);
	//		final Boolean refereeAfter = saveComplaint1.getReferee() != null;
	//		Assert.isTrue(refereeAfter != refereeBefore);
	//
	//		final Report re = this.reportService.create();
	//		re.setComplaint(saveComplaint1);
	//		final Report save = this.reportService.save(re);
	//
	//		final Note note = this.noteService.create();
	//		note.setReport(save);
	//		final Note noteS = this.noteService.save(note);
	//
	//		noteS.setCommentReferee("Holi");
	//
	//		final Note noteSave2 = this.noteService.updateRefereeComment(noteS);
	//
	//		Assert.isTrue(this.noteService.findAll().contains(noteSave2));
	//	}
	//	//CARMEN
	//
	//	//37.5 (CARMEN) --> Write a comment in a note regarding any of the reports that a referees written on
	//	//any of the complaints in which he or shes involved.
	//	@Test
	//	public void testUpdateHandyWorkerComment() {
	//
	//		final HandyWorker handyWorker = this.handyWorkerService.create();
	//		handyWorker.setName("Alvaro");
	//		handyWorker.setSurname("alvaro");
	//		handyWorker.getUserAccount().setUsername("hwAuth");
	//		handyWorker.getUserAccount().setPassword("123456789");
	//		final HandyWorker hwSave = this.handyWorkerService.save(handyWorker);
	//		super.authenticate("hwAuth");
	//
	//		final Customer customer = this.customerService.create();
	//		customer.setName("Alvaro");
	//		customer.setSurname("alvaro");
	//		customer.getUserAccount().setUsername("dogran");
	//		customer.getUserAccount().setPassword("123456789");
	//		final Customer saveCustomer = this.customerService.save(customer);
	//		super.authenticate("dogran");
	//
	//		final FixUp fixUp = this.fixUpService.create();
	//		fixUp.setHandyWorker(hwSave);
	//		fixUp.setCustomer(saveCustomer);
	//		final FixUp saveFixUp = this.fixUpService.save(fixUp);
	//
	//		final Complaint c1 = this.complaintService.create();
	//		c1.setFixUp(saveFixUp);
	//		final Complaint saveComplaint1 = this.complaintService.save(c1);
	//
	//		final Administrator administrator = this.administratorService.create();
	//		administrator.setName("Ana");
	//		administrator.setSurname("navarro");
	//		administrator.getUserAccount().setUsername("adminUser");
	//		administrator.getUserAccount().setPassword("12345678");
	//		final Administrator saveAdministrator = this.administratorService.save(administrator);
	//		Assert.isTrue(this.administratorService.findAll().contains(saveAdministrator));
	//		super.authenticate("adminUser");
	//		final Referee referee = this.refereeService.create();
	//		referee.setName("Alvaro");
	//		referee.setSurname("alvaro");
	//		referee.getUserAccount().setUsername("refereeUser");
	//		referee.getUserAccount().setPassword("12345678");
	//		final Referee saveReferee = this.refereeService.save(referee);
	//		super.authenticate("refereeUser");
	//
	//		final Boolean refereeBefore = saveComplaint1.getReferee() != null;
	//		this.complaintService.setReefereeToAComplaint(saveComplaint1);
	//		final Boolean refereeAfter = saveComplaint1.getReferee() != null;
	//		Assert.isTrue(refereeAfter != refereeBefore);
	//
	//		final Report re = this.reportService.create();
	//		re.setComplaint(saveComplaint1);
	//		final Report save = this.reportService.save(re);
	//
	//		final Note note = this.noteService.create();
	//		note.setReport(save);
	//		Assert.isTrue(note.getReport().getComplaint().getFixUp().getHandyWorker().getId() == hwSave.getId());
	//		final Note noteS = this.noteService.save(note);
	//
	//		Assert.isTrue(this.noteService.findAll().contains(noteS));
	//
	//		noteS.setCommentHandyWorker("Holi");
	//
	//		Assert.isTrue(note.getReport().getComplaint().getFixUp().getHandyWorker().getId() == hwSave.getId());
	//
	//		final Note noteSave2 = this.noteService.updateRefereeComment(noteS);
	//
	//		Assert.isTrue(this.noteService.findAll().contains(noteSave2));
	//	}
	//	//CARMEN	

	//37.4 (CARMEN) --> Write a note regarding any of the reports that a referees written regarding any of
	//the complaints in which he or shes involved.
	@Test
	public void createNoteByHandyWorker() {

		final Customer customer = this.customerService.create();
		customer.setName("Alvaro");
		customer.setSurname("alvaro");
		customer.getUserAccount().setUsername("dogran");
		customer.getUserAccount().setPassword("123456789");
		final Customer saveCustomer = this.customerService.save(customer);
		super.authenticate("dogran");

		final HandyWorker handyWorker = this.handyWorkerService.create();
		handyWorker.setName("Alvaro");
		handyWorker.setSurname("alvaro");
		handyWorker.getUserAccount().setUsername("hwAuth");
		handyWorker.getUserAccount().setPassword("123456789");
		final HandyWorker hwSave = this.handyWorkerService.save(handyWorker);

		final FixUp fixUp = this.fixUpService.create();
		fixUp.setHandyWorker(hwSave);
		fixUp.setCustomer(saveCustomer);
		final FixUp saveFixUp = this.fixUpService.save(fixUp);

		final Complaint c1 = this.complaintService.create();
		c1.setFixUp(saveFixUp);
		final Complaint saveComplaint1 = this.complaintService.save(c1);

		final Administrator administrator = this.administratorService.create();
		administrator.setName("Ana");
		administrator.setSurname("navarro");
		administrator.getUserAccount().setUsername("adminUser");
		administrator.getUserAccount().setPassword("12345678");
		final Administrator saveAdministrator = this.administratorService.save(administrator);
		Assert.isTrue(this.administratorService.findAll().contains(saveAdministrator));
		super.authenticate("adminUser");
		final Referee referee = this.refereeService.create();
		referee.setName("Alvaro");
		referee.setSurname("alvaro");
		referee.getUserAccount().setUsername("refereeUser");
		referee.getUserAccount().setPassword("12345678");
		final Referee saveReferee = this.refereeService.save(referee);
		super.authenticate("refereeUser");

		final Boolean refereeBefore = saveComplaint1.getReferee() != null;
		this.complaintService.setReefereeToAComplaint(saveComplaint1);
		final Boolean refereeAfter = saveComplaint1.getReferee() != null;
		Assert.isTrue(refereeAfter != refereeBefore);

		final Report re = this.reportService.create();
		re.setComplaint(saveComplaint1);
		final Report save = this.reportService.save(re);

		final Note note = this.noteService.create();
		note.setReport(save);
		note.setHandyWorker(hwSave);
		final Note noteS = this.noteService.saveHandyWorker(note);

		Assert.isTrue(this.noteService.findAll().contains(noteS));
	}
	//CARMEN

}
