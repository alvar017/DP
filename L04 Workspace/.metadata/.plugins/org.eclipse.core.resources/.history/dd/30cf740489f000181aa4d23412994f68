
package services;

import java.util.Arrays;

import javax.transaction.Transactional;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.util.Assert;

import repositories.ApplicationRepository;
import utilities.AbstractTest;
import domain.Application;
import domain.Customer;
import domain.FixUp;
import domain.HandyWorker;

@ContextConfiguration(locations = {
	"classpath:spring/datasource.xml", "classpath:spring/config/packages.xml"
})
@RunWith(SpringJUnit4ClassRunner.class)
@Transactional
public class ApplicationServiceTest extends AbstractTest {

	//Services under Test

	@Autowired
	private ApplicationService		applicationService;
	@Autowired
	private HandyWorkerService		handyWorkerService;
	@Autowired
	private FixUpService			fixUpService;
	@Autowired
	private CustomerService			customerService;
	@Autowired
	private ApplicationRepository	applicationRepository;


	//	@Test
	public void testSaveApplication() {
		final HandyWorker handyWorker = this.handyWorkerService.create();
		handyWorker.setName("Alvaro");
		handyWorker.setSurname("alvaro");
		handyWorker.getUserAccount().setUsername("dogran");
		handyWorker.getUserAccount().setPassword("123456789");
		final HandyWorker saveHandyWorker = this.handyWorkerService.save(handyWorker);
		super.authenticate("dogran");
		final Application application = this.applicationService.create();
		final Customer customer = this.customerService.create();
		customer.setName("Alvaro");
		customer.setSurname("alvaro");
		customer.getUserAccount().setUsername("dogran2");
		customer.getUserAccount().setPassword("123456789");
		final Customer saveCustomer = this.customerService.save(customer);
		super.unauthenticate();
		super.authenticate("dogran2");
		final FixUp fixUp = this.fixUpService.create();
		final FixUp saveFixUp = this.fixUpService.save(fixUp);
		application.setFixUp(saveFixUp);
		final Application saveApplication = this.applicationService.save(application);
		Assert.isTrue(this.applicationService.findAll().contains(saveApplication));
	}

	@Test
	public void testListingApplication() {
		// HANDY WORKER 1
		final HandyWorker handyWorker = this.handyWorkerService.create();
		handyWorker.setName("Alvaro");
		handyWorker.setSurname("alvaro");
		handyWorker.getUserAccount().setUsername("dogran");
		handyWorker.getUserAccount().setPassword("123456789");
		final HandyWorker saveHandyWorker = this.handyWorkerService.save(handyWorker);
		super.authenticate("dogran");
		// APPLICATION 1
		final Application application1 = this.applicationService.create();
		application1.setComments("Application1");
		// APPLICATION 2
		final Application application2 = this.applicationService.create();
		application2.setComments("Application2");
		// APPLICATION 3
		final Application application3 = this.applicationService.create();
		application3.setComments("Application3");
		// CREATE CUSTOMER 1
		final Customer customer1 = this.customerService.create();
		customer1.setName("Alvaro");
		customer1.setSurname("alvaro");
		customer1.getUserAccount().setUsername("dogran2");
		customer1.getUserAccount().setPassword("123456789");
		final Customer saveCustomer1 = this.customerService.save(customer1);
		super.unauthenticate();
		super.authenticate("dogran2");
		// FIX UP 1
		final FixUp fixUp1 = this.fixUpService.create();
		fixUp1.setApplications(Arrays.asList(application1));
		final FixUp saveFixUp1 = this.fixUpService.save(fixUp1);
		application1.setFixUp(saveFixUp1);
		final Application saveApplication1 = this.applicationService.save(application1);
		this.applicationRepository.flush();
		// FIX UP 2
		final FixUp fixUp2 = this.fixUpService.create();
		fixUp2.setApplications(Arrays.asList(application2));
		final FixUp saveFixUp2 = this.fixUpService.save(fixUp2);
		application2.setFixUp(saveFixUp2);
		final Application saveApplication2 = this.applicationService.save(application2);
		this.applicationRepository.flush();
		super.unauthenticate();
		// CREATE CUSTOMER 2
		final Customer customer2 = this.customerService.create();
		customer2.setName("Alvaro1");
		customer2.setSurname("alvaro1");
		customer2.getUserAccount().setUsername("dogran3");
		customer2.getUserAccount().setPassword("123456789");
		final Customer saveCustomer2 = this.customerService.save(customer2);
		super.authenticate("dogran3");
		// FIX UP 3
		final FixUp fixUp3 = this.fixUpService.create();
		fixUp3.setApplications(Arrays.asList(application3));
		final FixUp saveFixUp3 = this.fixUpService.save(fixUp3);
		application3.setFixUp(saveFixUp3);
		final Application saveApplication3 = this.applicationService.save(application3);
		this.applicationRepository.flush();
		for (final Application application : fixUp1.getApplications())
			System.out.println(application.getId());
		for (final Application application : fixUp2.getApplications())
			System.out.println(application.getId());
		for (final Application application : fixUp3.getApplications())
			System.out.println(application.getId());
		System.out.println(saveCustomer1.equals(saveCustomer2));
		for (final FixUp fixup : this.fixUpService.getFixUpByCustomerId(customer1.getId()))
			System.out.println(fixup);
	}
}
