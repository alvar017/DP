
package services;

import javax.transaction.Transactional;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.util.Assert;

import security.UserAccount;
import utilities.AbstractTest;
import domain.Administrator;
import domain.Complaint;
import domain.Customer;
import domain.FixUp;
import domain.Referee;
import domain.Report;

@ContextConfiguration(locations = {
	"classpath:spring/datasource.xml", "classpath:spring/config/packages.xml"
})
@RunWith(SpringJUnit4ClassRunner.class)
@Transactional
public class ReportServiceTest extends AbstractTest {

	@Autowired
	private ReportService			reportService;
	@Autowired
	private AdministratorService	administratorService;
	@Autowired
	private RefereeService			refereeService;
	@Autowired
	private ComplaintService		complaintService;
	@Autowired
	private FixUpService			fixUpService;
	@Autowired
	private CustomerService			customerService;


	@Test
	public void testCreate() {

		final Administrator administrator = this.administratorService.create();
		administrator.setName("Ana");
		administrator.setSurname("navarro");
		final UserAccount account = administrator.getUserAccount();
		account.setUsername("adminUser");
		account.setPassword("12345678");
		final Administrator saveAdministrator = this.administratorService.save(administrator);
		administrator.setUserAccount(account);
		Assert.isTrue(this.administratorService.findAll().contains(saveAdministrator));
		super.authenticate("admin");
		final Referee referee = this.refereeService.create();
		referee.setName("Alvaro");
		referee.setSurname("alvaro");
		final Referee saveReferee = this.refereeService.save(referee);
		Assert.isTrue(this.refereeService.findAll().contains(saveReferee));

		final Customer customer = this.customerService.create();
		customer.setName("Alvaro");
		customer.setSurname("alvaro");
		customer.getUserAccount().setUsername("customerAuth");
		customer.getUserAccount().setPassword("123456789");
		final Customer saveCustomer = this.customerService.save(customer);
		super.unauthenticate();
		super.authenticate("customerAuth");

		final FixUp fixUp = this.fixUpService.create();
		final FixUp saveFixUp = this.fixUpService.save(fixUp);

		final Complaint c = this.complaintService.create();
		c.setFixUp(saveFixUp);
		final Complaint saveCom = this.complaintService.save(c);
		this.complaintService.setReefereeToAComplaint(saveCom);

		Assert.isTrue(this.complaintService.findAll().contains(saveCom));

		final Report re = this.reportService.create();
		re.setComplaint(saveCom);
		final Report save = this.reportService.save(re);

		Assert.isTrue(this.reportService.findAll().contains(save));
	}

}
