
package services;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import repositories.MessageRepository;
import security.LoginService;
import security.UserAccount;
import domain.Actor;
import domain.MailBox;
import domain.Message;

@Service
@Transactional
public class MessageService {

	//Managed repository
	@Autowired
	private MessageRepository	messageRepository;

	@Autowired
	MailBoxService				mailBoxService;
	@Autowired
	AdministratorService		administratorService;
	@Autowired
	ActorService				actorService;

	private final List<String>	spamWords	= Arrays.asList("sex", "viagra", "cialis", "ferrete", "one million", "you've been selected", "Nigeria", "queryfonsiponsypaferrete", "sexo", "un millón", "ha sido seleccionado");


	public Message create() {
		final Collection<MailBox> boxes = new ArrayList<>();
		final Message m = new Message();
		m.setMailBoxes(boxes);
		return m;
	}

	public Message exchangeMessage(final Message message, final Integer receiverId) {
		final MailBox inBoxReceiver = this.mailBoxService.getInBoxActor(receiverId);
		inBoxReceiver.getMessages().add(message);

		final UserAccount userSender = LoginService.getPrincipal();
		final Actor sender = this.actorService.getActorByUserId(userSender.getId());
		final MailBox outBoxReceiver = this.mailBoxService.getOutBoxActor(sender.getId());
		this.checkSuspicious(message);
		outBoxReceiver.getMessages().add(message);

		return message;
	}

	public Message delete(final Message message) {
		final UserAccount user = LoginService.getPrincipal();
		final Actor a = this.actorService.getActorByUserId(user.getId());
		final MailBox inBox = this.mailBoxService.getInBoxActor(a.getId());
		final MailBox outBox = this.mailBoxService.getOutBoxActor(a.getId());
		final MailBox spamBox = this.mailBoxService.getSpamBoxActor(a.getId());
		final MailBox trashBox = this.mailBoxService.getTrashBoxActor(a.getId());
		if (trashBox.getMessages().contains(message))
			trashBox.getMessages().remove(message);
		if (inBox.getMessages().contains(message)) {
			inBox.getMessages().remove(message);
			trashBox.getMessages().add(message);
		}
		if (outBox.getMessages().contains(message)) {
			outBox.getMessages().remove(message);
			trashBox.getMessages().add(message);
		}
		if (spamBox.getMessages().contains(message)) {
			spamBox.getMessages().remove(message);
			trashBox.getMessages().add(message);
		}

		return message;

	}

	private void checkSuspicious(final Message msg) {
		for (final String word : this.spamWords)
			if (msg.getBody().contains(word))
				LoginService.getPrincipal().setIsSuspicious(true);
	}
}
