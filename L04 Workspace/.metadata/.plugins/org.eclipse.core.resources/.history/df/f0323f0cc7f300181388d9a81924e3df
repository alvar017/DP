
package services;

import java.util.ArrayList;
import java.util.Collection;

import javax.transaction.Transactional;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.util.Assert;

import security.Authority;
import security.LoginService;
import security.UserAccount;
import utilities.AbstractTest;
import domain.Administrator;

@ContextConfiguration(locations = {
	"classpath:spring/datasource.xml", "classpath:spring/config/packages.xml"
})
@RunWith(SpringJUnit4ClassRunner.class)
@Transactional
public class UserAccountServiceTest extends AbstractTest {

	@Autowired
	private LoginService			loginService;

	@Autowired
	private AdministratorService	administratorService;


	@Test
	public void testCreateUserAccount() {
		final Administrator administrator = this.administratorService.create();
		administrator.setName("Ana");
		administrator.setSurname("navarro");
		administrator.getUserAccount().setUsername("adminUser");
		administrator.getUserAccount().setPassword("12345678");
		final Administrator saveAdministrator = this.administratorService.save(administrator);
		Assert.isTrue(this.administratorService.findAll().contains(saveAdministrator));
		super.authenticate("adminUser");
		final UserAccount userAccount = this.loginService.create();
		Assert.notNull(userAccount);
	}
	
	@Test
	public void testCreateUserAccountAdministrator() {
		final Administrator admin = new Administrator();
		final UserAccount user = this.loginService.createUserAdministrators();
		final Collection<Authority> authorities = new ArrayList<>();
		final Authority admin1 = new Authority();
		admin1.setAuthority(Authority.ADMIN);
		authorities.add(admin1);
		user.setAuthorities(authorities);
		user.setUsername("antonio");
		user.setPassword("antonioPassword");
		admin.setUserAccount(user);
		admin.setSurname("Manuel");
		admin.setName("Antonio");
		final Administrator saved = this.administratorService.save(admin);

		super.authenticate("antonio");

		final UserAccount result = this.loginService.createUserAdministrators();

		Assert.notNull(result);
	}

}
